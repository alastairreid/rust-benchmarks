#!/usr/bin/env python3

import argparse
import os
import tempfile

from termcolor import colored

def main():
  parser = argparse.ArgumentParser(description='Create a cargo crate from a file')
  parser.add_argument('--backend', metavar='b',
                      choices=['klee', 'proptest'],
                      default="klee",
                      help='select backend')
  parser.add_argument('--verbose', '-v', action='count', default=0)
  parser.add_argument('--crate', help='crate to construct')
  parser.add_argument('--tests', action='store_true', default=False,
                      help='run #[test]s instead of main')
  parser.add_argument('test', help='Rust file to verify')
  parser.add_argument('klee_flags', nargs="*", help='extra verification flags')
  args = parser.parse_args()

  if args.backend is None and "TEST_BACKEND" in os.environ:
    args.backend = os.environ["TEST_BACKEND"]

  if args.crate is None:
    args.crate = tempfile.TemporaryDirectory(dir=".", prefix="tmpcargo-").name

  cmd = ["./mkcargo"]
  if args.verbose: cmd.append("--verbose")
  cmd.append(f"--backend={args.backend}")
  cmd.append(args.test)
  cmd.append(args.crate)
  os.system(" ".join(cmd))

  cmd = ["./cargo-verify"]
  for _ in range(0, args.verbose): cmd.append("--verbose")
  if args.tests: cmd.append("--tests")
  cmd.append(f"--backend={args.backend}")
  cmd.append(args.crate)
  if args.klee_flags: cmd.extend(args.klee_flags)
  os.system(" ".join(cmd))

if __name__=="__main__":
  main()
